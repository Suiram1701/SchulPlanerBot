<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="schulplaner.name" xml:space="preserve">
    <value>schulplaner</value>
  </data>
  <data name="schulplaner.description" xml:space="preserve">
    <value>Manages settings of the bot on the guild.</value>
  </data>
  <data name="schulplaner.settings.name" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="schulplaner.settings.description" xml:space="preserve">
    <value>Retrieves the settings configured for the guild.</value>
  </data>
  <data name="schulplaner.locale.name" xml:space="preserve">
    <value>locale</value>
  </data>
  <data name="schulplaner.locale.description" xml:space="preserve">
    <value>Configures the locale that will be used in notifications. Execute without locale to reset it.</value>
  </data>
  <data name="schulplaner.locale.culture.name" xml:space="preserve">
    <value>locale</value>
  </data>
  <data name="schulplaner.locale.culture.description" xml:space="preserve">
    <value>The locale to set. Empty to clear it.</value>
  </data>
  <data name="schulplaner.add-notification.name" xml:space="preserve">
    <value>add-notification</value>
  </data>
  <data name="schulplaner.add-notification.description" xml:space="preserve">
    <value>Adds a notification with certain parameters to this guild.</value>
  </data>
  <data name="schulplaner.add-notification.objects-in.name" xml:space="preserve">
    <value>objects-in</value>
  </data>
  <data name="schulplaner.add-notification.objects-in.description" xml:space="preserve">
    <value>The max due of objects (homeworks, etc.) from the notification. E.g.: 1d. By default between.</value>
  </data>
  <data name="schulplaner.add-notification.channel.name" xml:space="preserve">
    <value>channel</value>
  </data>
  <data name="schulplaner.add-notification.channel.description" xml:space="preserve">
    <value>The channel to post notifications in. Must be a text channel.</value>
  </data>
  <data name="schulplaner.remove-notification.name" xml:space="preserve">
    <value>remove-notification</value>
  </data>
  <data name="schulplaner.remove-notification.description" xml:space="preserve">
    <value>Removes a single notification from this guild.</value>
  </data>
  <data name="schulplaner.delete-homeworks.name" xml:space="preserve">
    <value>delete-homeworks</value>
  </data>
  <data name="schulplaner.delete-homeworks.description" xml:space="preserve">
    <value>Sets the time a homework gets deleted after its due.</value>
  </data>
  <data name="schulplaner.delete-homeworks.after.name" xml:space="preserve">
    <value>after-due</value>
  </data>
  <data name="schulplaner.delete-homeworks.after.description" xml:space="preserve">
    <value>The time a homework will be deleted after its due.</value>
  </data>
  <data name="homeworks.name" xml:space="preserve">
    <value>homeworks</value>
  </data>
  <data name="homeworks.description" xml:space="preserve">
    <value>Manages homeworks on the guild.</value>
  </data>
  <data name="homeworks.list.name" xml:space="preserve">
    <value>list</value>
  </data>
  <data name="homeworks.list.description" xml:space="preserve">
    <value>Gets all homeworks within the specified range or homeworks of a specific subject.</value>
  </data>
  <data name="homeworks.list.search.name" xml:space="preserve">
    <value>search</value>
  </data>
  <data name="homeworks.list.search.description" xml:space="preserve">
    <value>A term to search for in the title or description.</value>
  </data>
  <data name="homeworks.list.subject.name" xml:space="preserve">
    <value>subject</value>
  </data>
  <data name="homeworks.list.subject.description" xml:space="preserve">
    <value>The subject to retrieve the homeworks of. Leave empty to not filter.</value>
  </data>
  <data name="homeworks.list.start.name" xml:space="preserve">
    <value>start</value>
  </data>
  <data name="homeworks.list.start.description" xml:space="preserve">
    <value>The start date time of the range. By default the current date. E.g.: 01.01.2020 10:00 or just 10:00.</value>
  </data>
  <data name="homeworks.list.end.name" xml:space="preserve">
    <value>end</value>
  </data>
  <data name="homeworks.list.end.description" xml:space="preserve">
    <value>The end date time of the range. By default one week into the future. E.g.: 01.01.2020 or just 10:00.</value>
  </data>
  <data name="homeworks.create.name" xml:space="preserve">
    <value>create</value>
  </data>
  <data name="homeworks.create.description" xml:space="preserve">
    <value>Opens the dialog to create a new homework.</value>
  </data>
  <data name="homeworks.modify.name" xml:space="preserve">
    <value>edit</value>
  </data>
  <data name="homeworks.modify.description" xml:space="preserve">
    <value>Opens the dialog to modify an existing homework. Can only be done by its creator or a mod.</value>
  </data>
  <data name="homeworks.modify.id.name" xml:space="preserve">
    <value>id</value>
  </data>
  <data name="homeworks.modify.id.description" xml:space="preserve">
    <value>The ID of the homework to modify.</value>
  </data>
  <data name="homeworks.delete.name" xml:space="preserve">
    <value>delete</value>
  </data>
  <data name="homeworks.delete.description" xml:space="preserve">
    <value>Deletes a homework by its ID. A homework can only be deleted by its creator or a mod.</value>
  </data>
  <data name="homeworks.delete.id.name" xml:space="preserve">
    <value>id</value>
  </data>
  <data name="homeworks.delete.id.description" xml:space="preserve">
    <value>The ID of the homework to remove.</value>
  </data>
  <data name="homeworks.subscriptions.name" xml:space="preserve">
    <value>subscriptions</value>
  </data>
  <data name="homeworks.subscriptions.description" xml:space="preserve">
    <value>Shows your homework notification subscriptions.</value>
  </data>
  <data name="homeworks.subscribe-all.name" xml:space="preserve">
    <value>subscribe-all</value>
  </data>
  <data name="homeworks.subscribe-all.description" xml:space="preserve">
    <value>Subscribes to notifications for all subjects.</value>
  </data>
  <data name="homeworks.unsubscribe-all.name" xml:space="preserve">
    <value>unsubscribe-all</value>
  </data>
  <data name="homeworks.unsubscribe-all.description" xml:space="preserve">
    <value>Unsubscribes from notifications of all subjects. Manuel added subjects will remain.</value>
  </data>
  <data name="homeworks.subscribe.name" xml:space="preserve">
    <value>subscribe</value>
  </data>
  <data name="homeworks.subscribe.description" xml:space="preserve">
    <value>Subscribes to notifications from specific subjects or no subject.</value>
  </data>
  <data name="homeworks.subscribe.subjects.name" xml:space="preserve">
    <value>subjects</value>
  </data>
  <data name="homeworks.subscribe.subjects.description" xml:space="preserve">
    <value>Subjects you will receive notifications for. Separate theme using , or ;.</value>
  </data>
  <data name="homeworks.subscribe.no-subject.name" xml:space="preserve">
    <value>no-subject</value>
  </data>
  <data name="homeworks.subscribe.no-subject.description" xml:space="preserve">
    <value>Receive notification for homeworks without a subject. Can't unsubscribe from this with false.</value>
  </data>
  <data name="homeworks.unsubscribe.name" xml:space="preserve">
    <value>unsubscribe</value>
  </data>
  <data name="homeworks.unsubscribe.description" xml:space="preserve">
    <value>Unsubscribes from notifications of specific subjects or no subject.</value>
  </data>
  <data name="homeworks.unsubscribe.subjects.name" xml:space="preserve">
    <value>subjects</value>
  </data>
  <data name="homeworks.unsubscribe.subjects.description" xml:space="preserve">
    <value>Subjects you no longer will receive notification for. Separate theme using , or ;.</value>
  </data>
  <data name="homeworks.unsubscribe.no-subject.name" xml:space="preserve">
    <value>no-subject</value>
  </data>
  <data name="homeworks.unsubscribe.no-subject.description" xml:space="preserve">
    <value>Indicates whether notification from homeworks without a subject should be disabled.</value>
  </data>
  <data name="help.name" xml:space="preserve">
    <value>help</value>
  </data>
  <data name="help.description" xml:space="preserve">
    <value>Retrieves information for help with this bot.</value>
  </data>
  <data name="schulplaner.add-notification.cron.name" xml:space="preserve">
    <value>cron-expression</value>
  </data>
  <data name="schulplaner.add-notification.cron.description" xml:space="preserve">
    <value>An expression which specifies when the notification should be done. Isn't the regular UNIX style.</value>
  </data>
  <data name="schulplaner.remove-notification.channel.name" xml:space="preserve">
    <value>channel</value>
  </data>
  <data name="schulplaner.remove-notification.channel.description" xml:space="preserve">
    <value>The channel whose notification should be removed.</value>
  </data>
</root>