// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SchulPlanerBot.Business;

#nullable disable

namespace SchulPlanerBot.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20250604154200_CronNotifications")]
    partial class CronNotifications
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SchulPlanerBot.Business.Models.Guild", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<TimeSpan>("DeleteHomeworksAfterDue")
                        .HasColumnType("interval");

                    b.Property<string>("NotificationLocale")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("SchulPlanerBot.Business.Models.Homework", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("CreatedBy")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Details")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)");

                    b.Property<DateTimeOffset>("Due")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("LastModifiedBy")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Subject")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("Homeworks");
                });

            modelBuilder.Entity("SchulPlanerBot.Business.Models.HomeworkSubscription", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("AnySubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.PrimitiveCollection<string[]>("Exclude")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.PrimitiveCollection<string[]>("Include")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("GuildId", "UserId");

                    b.ToTable("HomeworkSubscriptions");
                });

            modelBuilder.Entity("SchulPlanerBot.Business.Models.Guild", b =>
                {
                    b.OwnsMany("SchulPlanerBot.Business.Models.Notification", "Notifications", b1 =>
                        {
                            b1.Property<decimal>("GuildId")
                                .HasColumnType("numeric(20,0)");

                            b1.Property<decimal>("ChannelId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("numeric(20,0)");

                            b1.Property<string>("CronExpression")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("character varying(256)");

                            b1.Property<TimeSpan?>("ObjectsIn")
                                .HasColumnType("interval");

                            b1.HasKey("GuildId", "ChannelId");

                            b1.ToTable("Notification");

                            b1.WithOwner()
                                .HasForeignKey("GuildId");
                        });

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("SchulPlanerBot.Business.Models.Homework", b =>
                {
                    b.HasOne("SchulPlanerBot.Business.Models.Guild", null)
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchulPlanerBot.Business.Models.HomeworkSubscription", b =>
                {
                    b.HasOne("SchulPlanerBot.Business.Models.Guild", null)
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
